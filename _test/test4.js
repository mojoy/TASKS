//Для подсчета количества пробелов в строке вы можете воспользоваться методом split и затем посчитать количество полученных частей (слов) минус один.
//В этом примере:
/*
split(' ') разделяет строку на массив слов, используя пробел как разделитель.
length возвращает количество элементов в массиве, которое равно количеству слов в строке.
Отнимаем 1, так как пробелы между словами создают один пустой элемент в конце массива.

Теперь переменная spacesCount содержит количество пробелов в строке array.
*/

const array = "В этом мире много уродов потому, что их не истребляют";
const arrayString = "Краткие ежедневные занятия помогают накапливать знания"

// Ограничиваем строку 20-ю символами и добавляем "..." в конце, если длина строки больше 20
const limitedString =
  array.length > 20 ? array.substring(0, 20) + "..." : array;

console.log(limitedString);

const spacesCount = array.split(" ").length - 1; // Отнимаем 1, так как пробел между элементами создают один пустой элемент в конце массива.
const commaCount = array.split(",").length - 1; // Отнимаем 1, так как запятые между элементами создают один пустой элемент в конце массива.

const modifiedString = array.replace(/истребляют/g, "лечат");

modifiedText = (modText, modText2) => {
  const modifiedTextArray = array.replace(new RegExp(modText, "g"), "мало");
  return modifiedTextArray.replace(new RegExp(modText2, "g"), "лечат");
  //Используем new RegExp для создания регулярного выражения на основе переданного текста modText, а флаг 'g' указывает на глобальный поиск, чтобы заменить все вхождения, а не только первое.
};
console.log("число запятых ", commaCount);
console.log("число пробелов ", spacesCount);
console.log(array);

console.log(modifiedString);

console.log(modifiedText("много", "истребляют"));




//внешний вид массива на выходе должен иметь вид [1 ,4,4,5,6,6,3,2]
//Чтобы получить массив с количеством букв в каждом слове в указанном вами формате, вам нужно вместо массива чисел создать строку, в которой числа разделены запятой. 
//Затем вы можете использовать метод split для разделения строки на отдельные числа. 


/*
    map(word => word.length).join(',') создает строку с количеством букв в каждом слове, разделенным запятой.
    split(',') разделяет эту строку на массив строк, а map(Number) преобразует каждую строку в число.

Теперь переменная lettersCountArray содержит массив чисел в указанном вами формате.
 */

// Разделяем строку на слова
const wordsArray = array.split(/\s*,\s*/);

// Создаем строку с количеством букв в каждом слове, разделенным запятой
const lettersCountString = wordsArray.map(word => word.length).join(',');

// Разделяем строку на массив чисел
const lettersCountArray = lettersCountString.split(',').map(Number);

console.log(lettersCountArray);


//поменять направление текста
/*
    split(' ') разделяет строку на массив слов.
    map(word => word.split('').reverse().join('')) меняет направление букв в каждом слове, разбивая его на массив букв, меняя порядок с помощью reverse, 
    а затем объединяя его обратно в слово с помощью join.
    join(' ') объединяет массив слов обратно в строку.

Теперь переменная reversedString содержит строку, в которой направление букв в каждом слове изменено.
*/

// Разделяем строку на массив слов
const newWordsArray = arrayString.split(' ');

// Меняем направление букв в каждом слове
const reversedWordsArray = newWordsArray.map(word => word.split('').reverse().join(''));

// Собираем обратно в строку
const reversedString = reversedWordsArray.join(' ');

console.log(reversedString);